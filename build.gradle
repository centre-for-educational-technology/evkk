buildscript {
    repositories { mavenCentral() }
    dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") }
}

subprojects {

    apply plugin: "java"
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "io.spring.dependency-management"

    repositories {
        mavenCentral()
    }

    group = "ee.tlu.evkk"
    version = "$version"
    sourceCompatibility = 1.8

    dependencyManagement {
        imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
    }

    dependencies {

        // test
        testCompile project(":test")

    }

    tasks.withType(FindBugs) {
        def dir = new File(getReportDirectory(), "/findbugs/")
        doFirst {
            dir.mkdirs()
        }
        reports {
            xml.enabled = false
            html.enabled = true
            html.setDestination(new File(dir, project.name + ".html"))
        }
        excludeFilter = new File(rootDir, "findbugs-exclude.xml");
    }

    tasks.withType(Checkstyle) {
        configFile = new File(rootDir, "checkstyle.xml")
        checkstyle {
            toolVersion = '7.4'
        }
        reports {
            def file = new File(getReportDirectory(), "/checkstyle/" + project.name + ".html")
            xml.enabled = false
            html.enabled = true
            html.setDestination(file)
        }
    }

    test {
        def dir = new File(getReportDirectory(), "/tests/" + project.name)
        useJUnit()
        testLogging {
            showStandardStreams = true
        }
        reports.html.setDestination(dir)
    }

}

def getReportDirectory() {
    return System.getProperty("reportDir", rootProject.projectDir.toString() + "/reports")
}