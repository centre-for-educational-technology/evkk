version: "3.7"

services:

  postgres:
    image: postgres:13-alpine
    restart: always
    secrets:
      - EVKK_DB_DATASOURCE_PASSWORD
    environment:
      POSTGRES_USER: db_user
      POSTGRES_DB: evkk
      POSTGRES_PASSWORD_FILE: /run/secrets/EVKK_DB_DATASOURCE_PASSWORD
    volumes:
      - /srv/evkk/data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - /srv/evkk/data/redis:/data

  caddy:
    image: caddy:2.4.5-alpine
    restart: always
    ports:
      - "9999:9999"
    volumes:
      - $PWD/compose/Caddyfile:/etc/caddy/Caddyfile

  ui:
    image: evkk-ui
    restart: always
    depends_on:
      - api

  db:
    image: evkk-backend
    entrypoint: [ "/bin/bash", "-c", "java -jar app/db.jar" ]
    secrets:
      - EVKK_DB_DATASOURCE_PASSWORD
      - EVKK_API_DATASOURCE_PASSWORD
    env_file:
      - $PWD/conf/common.env
      - $PWD/conf/db.env
      - $PWD/conf/api.env
    depends_on:
      - postgres

  api:
    image: evkk-backend
    restart: always
    entrypoint: [ "/bin/bash", "-c", "java -jar app/api.jar" ]
    secrets:
      - EVKK_API_DATASOURCE_PASSWORD
    depends_on:
      - db
      - redis
    env_file:
      - $PWD/conf/common.env
      - $PWD/conf/api.env

  #clusterfinder:
  #  image: evkk-backend
  #  restart: always
  #  entrypoint: [ "/bin/bash", "-c", "java -jar app/clusterfinder.jar" ]
  #  env_file:
  #    - $PWD/conf/common.env
  #    - $PWD/conf/clusterfinder.env
  #  depends_on:
  #    - api
